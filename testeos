#! /bin/bash

#codigo Nico
#ayuda para guiar al usuario
function ayuda(){
	echo "Nota: Este script solo fuciona con archivos del tipo texto plano (Por ejemplo, .c, .h, .txt, etc."
	echo "No responde adecuadamente con los del tipo .doc/.docx, .odt, etc"
}


#Validaciones varias
function valida(){
	if [ $# == 1 ] && [ "$1" == "-h" ]; then
		ayuda
		exit 0
	fi

#Trata de leer el directorio y sino lo manda a ayuda
	if [ ! $# == 2 ]; then
		echo "error 1"
		exit 1	
	fi
#Veo si el argumento del directorio es vacio
	if [ -z "$1" ]; then
		echo "esta en blanco"
		ayuda
		exit 1
	fi
#veo si existe el directorio existe, sino 
	if [ ! -d "$1" ]; then
		echo "directorio no existe"
		ayuda
		exit 1
	fi

	if [ -z "$2" ]; then
		echo "esta en blanco"
		ayuda
		exit 1
	fi
}

#codigo Lautaro
function evaluarMultiLinea(linea, cantComentadas, boolSeguirMultilinea){		
	cantComentadas= cantComentadas + 1;

	if [index(linea, "*/")]{			
		boolSeguirMultilinea= "0";
	}		
}

function evaluarLineaNormal(linea, primerPalabra ,cantComentadas, cantCodigos, boolSeguirMultilinea)
{
	#Si la primera palabra es comtario solamente agrego +1 a la cantidad comentadas
	if(index(primerPalabra, "//"))
		cantComentadas= cantComentadas + 1;
	#Si la linea al principio el codigo pero despues se vuelve comentario tengo que contar la linea dos veces (Segun enunciado) 
	else if(index(linea, "//")){
		cantComentadas= cantComentadas + 1;
		cantCodigos= cantCodigos + 1;			
	}
	#Si empieza el comentario multilinea al principio de la oración entonces activo el modo de multilinea
	else if(index(primerPalabra, "/*")){
		cantComentadas= cantComentadas + 1;
		boolSeguirMultilinea= "1";
	}
	#Si empieza el comentario multilinea lunego de una linea de código entonces la cuento dos veces (Segun enunciado)
	else if(index(linea, "/*")){
		cantComentadas= cantComentadas + 1;
		cantCodigos= cantCodigos + 1;
		boolSeguirMultilinea= "1";
	}
	else{
		cantCodigos= cantCodigos + 1;
	}	
}


BEGIN { 
	Es_comentario_multiLinea ="0"
	Cantidad_lineas_codigo="0"
	Cantidad_lineas_comentadas="0" 
} 
{
	if(Es_comentario_multiLinea == "1")
		evaluarMultiLinea($0, Cantidad_lineas_comentadas, Es_comentario_multiLinea) #Le pasa toda la linea y el contador de comentarios
	else
		evaluarLineaNormal($0, $1, Cantidad_lineas_comentadas, Cantidad_lineas_codigo, Es_comentario_multiLinea) #Le pasa toda la linea y los dos contadores
}

END { 
	printf "Se encontraron %d linea(s) de código y %d de comentario(s).", Cantidad_lineas_codigo, Cantidad_lineas_comentadas;
}

#codigo Nico
valida "$1" "$2"

cDeComentarios

#Cuento la cantidad de lineas // que hay en un archivo
cDeComentarios=grep -c "//" ./Procesamiento/codigo



Sabado


hola() {
	awk '
	BEGIN { print "Analisis de archivo" }
	// { m= m + 1 }
	/\/\// { n= n + 1 }
	/\/\*/ { n= n + 1 }
	END   { print "\"//\" appears in", m - n, "records." }' pruebas
}

mod() {
	awk '
	BEGIN { print "" }
	// { m= m + 1 }
	/\/\// { n= n + 1 }
	/\/\*/ { n= n + 1 }
	END   { print "Lineas = ", m, ", cant cod = ", m-n, ",cant comentarios =", n, ", 		porcentaje =", (m-n)/m }' pruebas
}

#lineas total //
#comentarios total
#porcentajes


	awk '
	BEGIN { cant= 0 }
	// { if ( $1 ~ /^\// ) cant= cant+1 }
	// { if ( $1 !~ /^\// ) cant= cant-1 }
	END { print "This ", cant }' pruebas

